=
1.
Quantum optical 
processing 
2.
Key post-
processing
Communication
KM
Trusted node
Trusted node
Trusted node
key 
request
key 
material
quantum channel
QKD module
classical channel
OTP, AES, 
TLS, IPSEC,â€¦
1.
Quantum optical 
processing 
2.
Key post-
processing
1.
Quantum optical 
processing 
2.
Key post-
processing
quantum channel
classical channel
QKD module
QKD module
key 
material
key 
material
Application
Key Management
Key Distribution
QKD Control
QKD Network 
Controller 
QKD Control
QKD Control
KM
KM
Figure 19:
Illustration of integrated QKD network
application layer, which contains all hardware devices and software that will consume cryptographic keys,
for use in protocols such as TLS for secure connection to web servers, IPSec for VPN connections, AES
for encryption, etc.
In this simplified example, each node is responsible for generating and managing keys between users in
their local network and users in the local networks of other nodes. Depending on the network architecture,
each node could serve as an end point as well as a trusted node used for linking other end points. The
raw key material is generated by the QKD modules residing in two connected nodes, which are linked
by quantum and classical channels used for point-to-point QKD sessions. In the case of DI-QKD, the
quantum channel would consist of entangled states shared across the link, and the trusted node would
be employ a repeater station to connect the two neighboring links. In the near term, the trusted nodes
are the classical trusted relay nodes described above. We note that this architecture permits the key
distribution layer to be constructed from different types of QKD systems or protocols, or to employ
parallel QKD links between nodes to increase the key rate and reduce denial of service risk. In addition,
in a network architecture, two users might be linked through different sets of intermediary nodes to the
same effect.
Through the QKD protocol(s) used, cryptographic key material in the form of shared random bit
strings is produced between linked QKD modules and uploaded to the key managers, which store it for
future use. When end users need to be connected, the key managers at the intermediate trusted nodes
perform the necessary post processing to produce shared keys between the users. Upon request, the key
managers at the endpoints can format the keys and deliver them to the security application that will use
them. Key managers at different trusted nodes must communicate to synchronize the key request and
delivery, to assure that two end users can communicate with the same key.
The QKD control layer manages the end-to-end connectivity from one user to the another through the
required trusted nodes, so that the middle nodes perform the appropriate processing to enable the link
between end users. The QKD controllers are responsible for routing control for key relays, management
of QKD and KM links, session control for QKD services, authentication and authorization, as well as
ensuring quality of service. The QKD control layer might also employ a centralized architecture. In
addition to the layers shown in Fig. 19, management layers (not shown) monitor the entire stack and
ensure quality of service and that the required functionality is met.
As technology progresses, the QKD layer can be upgraded from device-dependent QKD to semi-DI
and eventually full-DI. A roadmap for development of QKD architecture and rollout in the EU is shown in
Fig. 20, where we note that device independence is included as a key benchmark. As quantum repeaters
80
