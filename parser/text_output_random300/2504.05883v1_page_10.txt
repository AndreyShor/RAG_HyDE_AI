PHILOSOPHICAL TRANSACTIONS OF THE ROYAL SOCIETY A, VOLUME 383, ISSUE 2289, 2025, DOI:10.1098/RSTA.2024.0146
10
1
3
5
7
Number of agents
0
2
4
6
8
Runtime (s)
1
3
5
7
Number of agents
0
5
10
15
20
25
Runtime (s)
Centralized
Distributed
Centralized
Distributed
(a)
(b)
(c)
0
20
40
60
80
100
Mission Time
(time-steps)
Centr.
Dist.
Dist. LC
No Coord.
T = 3
T = 6
Fig. 4. Performance evaluation of the proposed approach. (a)(b) Computational complexity of centralized ( [16]) and distributed (proposed approach) coverage
planning with respect to the number of agents and the length of the planning horizon. (c) Performance comparison with competing approaches.
randomly placed within the environment to cover 35 points of interest, using a planning horizon of length T = 6. Besides
comparing to the centralized approach we also evaluate two variations: distributed with limited communication (Dist. LC) and
multi-agent coverage without coordination (No Coord.). In the Dist. LC setup, agents collaborate opportunistically within a
3m communication range with the lowest-index agent initiating the proposed approach. Agents within communication range
also exchange their coverage databases Qn, whereas those outside generate plans independently following Problem (P1). The
No Coord. approach involves agents always planning independently without collaborative strategies, though agents within
communication range share their coverage databases Qn.
It is important to mention here that with regard to the approaches Dist. LC and No Coord., in scenarios where the agents are
not in communication range, the guidance objective in Eq. (9) cannot be computed due to the lack of information required for
solving the assignment problem. For this reason, each agent n computes its nearest unobserved point of interest in a greedy
manner by calculating: arg min˜p ∥xn(t + τ|t) −˜Pn(˜p)∥2
2, where ˜Pn is a list of unobserved points of interest based solely on
agent n’s record of observed points Qn.
Figure 4(c) displays the average mission completion time for these four methods. The centralized approach completes
the mission in about 40 time-steps, with the proposed distributed method being roughly 15% slower, but 6.5 times more
computationally efficient, as shown in Fig. 4(b). The Dist. LC variant highlights the significant role of communication in
forming collaborative plans and influencing mission completion times, further emphasized by the No Coord. approach’s
performance which lacks inter-agent communication for collaborative plan generation. These experiments illustrate the trade-
offs between computational complexity, performance, and communication, showcasing the proposed approach’s adaptability to
diverse scenarios and needs.
Finally, we have conducted experimental tests of the proposed approach for covering the surface area of the University
of Cyprus Library building, an oval-like structure with major and minor axis diameters of approximately 170m and 85m,
respectively, and a height of about 25m, as depicted in Fig. 5(a). The building’s surface was first converted from a 3D point
cloud into a mesh of 82 triangular facets as illustrated in Fig. 5(b). Using the proposed approach we generated collaborative
coverage trajectories for 3 UAV agents tasked with covering the building’s surface area, depicted in Fig. 5(b). This figure
specifically presents a top-down view of the building and illustrates the trajectories generated by the 3 agents, ensuring
coverage of the entire area. The covered points are colour-coded to match the colour of the agents that covered them i.e.,
green, red, and blue, for agents 1,2 and 3 respectively.
Implementation details: The UCY library building area was pre-scanned using a single quadrotor UAV equipped with a
camera and lidar. This process involved capturing multiple images and raw lidar data, which were subsequently processed to
generate a 3D point cloud. The point cloud was triangulated to create the 3D mesh shown in Fig. 5(b). The experimental setup
utilized three DJI Mavic Enterprise UAVs, as illustrated in Fig. 5(d). Each UAV was equipped with a 12MP gimbal-stabilized
camera and operated at a safety-maximizing velocity of 2 m/s. The UAVs were controlled using the DJI Mobile Software
Development Kit (SDK), which enabled the development of a custom Android mobile application running on mobile phones
assigned to the UAVs. Each mobile phone running the custom SDK-enabled application wirelessly connected to its respective
drone’s remote controller, acting as an intermediary to facilitate command transmission to the drone and the reception of
telemetry data (i.e., Fig. 5(e)), such as GPS location, altitude, battery status, speed, and sensor information. Due to SDK
constraints and hardware limitations (specifically, the lack of direct access to the drones’ onboard controllers), the proposed
distributed model predictive coverage controller could not be implemented on the UAVs’ onboard control systems. Instead, a
ground control station (GCS) executed the distributed controller in Matlab and transmitted the resulting trajectories to the UAVs
through the mobile applications running on the Android phones connected to each drone’s remote controller. The GCS also
received telemetry data from the UAVs via this application. Communication between the GCS and the UAVs was established
through a VPN server over a wireless network, allowing for data exchange between agents and the GCS. The live mission
