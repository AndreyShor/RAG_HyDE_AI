Preprint. Under review.
===
EXAMPLE 0: <Same Example as in the ModelSpecs One-Shot Prompt>
=== Now generate the JAVA API code to compute the target quantity for the problem
below. Export the table containing the target quantity to OUTPUT PATH/output.txt.
PROBLEM DESCRIPTION: {{problem description}}
TARGET QUANTITY to be computed : {{ target description }}
ANSWER:
We use the prompt above for the ModelSpecs + PhyDoc experiment, as well as to sample
the initial population in the Multi-Turn Agent experiment. In the latter case, we removed
the 3rd last line of code in the One-Shot example.
Plan | Phy-Doc In-Context
You are an experienced COMSOL engineer. You must generate the COMSOL API
code in JAVA to execute the steps described in the plan below to compute the desired
TARGET QUANTITY by generating COMSOL JAVA API code. The model creation
line “‘Model model = ModelUtil.create(”Model”);“‘ has already been generated and
you should not repeat this line. All lines of code must begin with ‘model.‘ You must
not generate any ‘model.sol...‘ solver code but should ensure that your ‘model.study...‘
block ends with a ‘model.study(”std1”).run();‘. This will automatically create and
run the default solver for the problem.
You are provided with the list of valid physics interfaces and features under each
interface. You must only use the interfaces and features in these lists:
===
AVAILABLE COMSOL PHYSICS INTERFACES:
['BeamCrossSection ', 'PorousMediaFlowRichards ', '
MoistureTransportInBuildingMaterials ', 'CreepingFlow ', '
CathodicProtection '... <List of 140 Interface >...' LumpedBattery
', 'CompressiblePotentialFlow ', 'BatteryBinaryElectrolyte ', '
ColdPlasma ', 'LaplaceEquation ', 'DilutedSpeciesInPorousCatalysts
']
AVAILABLE FEATURES UNDER EACH INTERFACE:
{'ElectromagneticWavesBeamEnvelopes ': {'features ': ['
MatchedBoundaryCondition ', 'SymmetryPlane ', 'Scattering ', '
TransitionBoundaryCondition ', 'Impedance ', 'Port ', '
FieldContinuity '], 'physics_tags ': ['ewbe ']}, '
TransientPressureAcoustics ': {'features ': ['InteriorSoundHard ',
'InteriorLumpedSpeakerBoundary ', 'TransientMonopoleLineSource ',
'CylindricalWaveRadiation ', 'Impedance ', '
NonlinearAcousticsWestervelt ', 'Pressure ', 'PlaneWaveRadiation
'], 'physics_tags ': ['actd ', 'actd2 ']}, ...<Interface -Feature
Mapping >...' PressureAcousticsAsymptoticScattering ': {'features ':
[], 'physics_tags ': ['paas ']}, '
ElectromagneticWavesBoundaryElements ': {'features ': [], '
physics_tags ': ['embe ']}, 'WallDistance ': {'features ': ['Wall '],
'physics_tags ': ['wd ', 'wd2 ']}}
===
Now use the example provided below to infer how to format your response and
generate COMSOL code.
===
EXAMPLE 0: PLAN: ...<Same as the One-Shot Example in Plan above>...
===
=== Now generate the JAVA API code to compute the target quantity for the problem
below, by following the plan described. Export the table containing the target
quantity to OUTPUT PATH/output.txt.
34
